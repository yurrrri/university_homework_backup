<?xml version="1.0" encoding="UTF-8"?>

<!-- 기타 요구사항에서의 targetNamespace를 선언하고, elementFormDefault 속성은 "qualified"로 선언한다. -->
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.dongduk.ac.kr/BookML/2.0"
	xmlns:tns="http://www.dongduk.ac.kr/BookML/2.0"
	elementFormDefault="qualified">
   
   <!-- 기타 요구사항에 따라
   bookTypes.xsd 파일의 타입들을 이용하기 위해 include 태그로 스키마 문서를 결합한다. -->
    <include schemaLocation="bookTypes.xsd"></include>

	<!-- R1: BookML 문서는 도서들의 목록과 분류정보로 구성된다.
	기타 요구사항에 따라 bookCatalog, bookList, bookCategory를 global
	 element로 선언하고 anonymous local type으로 정의한다.
	 
	 또한 bookCatalog의 자식 엘리먼트로 global element인 bookList,
	 bookCategory을 선언하기 위해 이 들을 ref 속성으로 참조하여 선언한다.  -->
	<element name="bookCatalog">
		<complexType>
			<sequence>
				<element ref="tns:bookList">
				</element>
				<element ref="tns:bookCategory"></element>
			</sequence>
		</complexType>
		<!-- R7: 도서가 속한 분야가 도서 카테고리의 분야와 반드시 일치해야 하므로
		bookCategory의 key를 참조한다. -->
		<keyref name="categoryKeyRef" refer="tns:bookCategoryKey">
    		<selector xpath="tns:book/tns:category"/>
    		<field xpath="."></field>
    	</keyref>
	</element>

	<element name="bookList">
		<complexType>
			<sequence>
				<element ref="tns:book" maxOccurs="unbounded" minOccurs="0">
				</element>
				<element ref="tns:eBook" maxOccurs="unbounded" minOccurs="0">
				</element>
				<element ref="tns:eBook_new" maxOccurs="unbounded"
					minOccurs="0">
				</element>
			</sequence>
		</complexType>
	</element>
	
	<element name="bookCategory">
    	<complexType>
    		<sequence>
    			<element name="category" type="tns:categoryType" maxOccurs="unbounded" minOccurs="1"></element>
    		</sequence>
    	</complexType>
    	<!-- R7에 따라 bookCategory의 category의 cid를 참조하기 위해
    	bookCategory의 cid에 key를 설정한다. -->
    	<key name="bookCategoryKey">
    		<selector xpath=".//tns:category"></selector>
    		<field xpath=".//@cid"></field>
    	</key>
    </element>

	<element name="book" type="tns:bookType">
	</element>
	<element name="eBook" type="tns:eBookType"></element>
	<element name="eBook_new" type="tns:eBook_newType"></element>
	
	<!-- 기타요구사항에 따라 도서에 관한 global type을 정의한다.
	ebookType(전자책)은 bookType(도서)의 다형성을 활용하여 정의한다.
	이때 bookType을 기반으로 하여 엘리먼트를 추가하기 위해 extension 태그를 사용하였다.
	ebook_newType(신간 전자책)은 요구사항 R11를 만족하기 위한 재정의를 위해 ebookType(전자책)의 다형성을 활용한다.
	이때 ebookType을 기반으로 하여 데이터의 값의 범위 및 빈도수를 제한하기 위해 restriction 태그를 사용하였다.-->
	
	<!-- R2에서 각 도서는 제목, 저자, 출판사, 출판일, 가격, 할인율, 페이지수, 분야의 정보를 가진다.
	원서제목, 역자, 표지그림, 줄거리는 선택적으로 존재할 수 있으므로 minOccurs 속성을 1, maxOccurs 속성을 1로 지정한다.
	 R2에서 저자, 분야는 필수이되 여러개가 존재할 수 있으므로 minOccurs 속성을 1, maxOccurs 속성을 unbounded로 지정한다.
	 R2에서 개정일과 review는 선택적이나 여러개 존재할 수 있으므로 minOccurs 속성을 0, maxOccurs 속성을 unbounded로 지정한다.-->
	<complexType name="bookType">
		<sequence>
			<element ref="tns:title"></element>
            <element ref="tns:originalTitle" maxOccurs="1" minOccurs="0">
			</element>
            <element ref="tns:author" maxOccurs="unbounded"
				minOccurs="1">
			</element>
            <element ref="tns:translator" maxOccurs="1" minOccurs="0"></element>
            <element ref="tns:publisher"></element>
			<element ref="tns:publishDate"></element>
            <element ref="tns:revisionDate" maxOccurs="unbounded" minOccurs="0">
			</element>
            <element ref="tns:price"></element>
			<element ref="tns:discountRate"></element>
			<element ref="tns:pages"></element>
            <element name="category" maxOccurs="unbounded" minOccurs="1"></element>
			<element ref="tns:coverImage" maxOccurs="1" minOccurs="0"></element>
			<element ref="tns:plot" maxOccurs="1" minOccurs="0"></element>
			<element ref="tns:review" maxOccurs="unbounded"
				minOccurs="0">
			</element>
		</sequence>
		<attribute name="isbn" type="tns:isbnType"></attribute>
	</complexType>
	
	<!-- R9: 전자책 도서는 R2에 나열된 도서 정보에 파일 형식, 파일 크기, 이용기간 정보가 추가되므로
	bookType을 기반으로 하는 다형성을 활용하여 extension 태그로 엘리먼트를 추가한다.
	이때 이용기간은 제한이 없을 경우 생략이 가능하므로, minOccurs를 0으로 지정하고 maxOccurs를 1로 지정한다. -->
	<complexType name="eBookType">
		<complexContent>
			<extension base="tns:bookType">
				<sequence>
					<element ref="tns:format"></element>
					<element ref="tns:size"></element>
					<element ref="tns:period" maxOccurs="1" minOccurs="0"></element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<!-- R11: ebookType의 자식 엘리먼트의 값을 제한하기 위해 모든 자식엘리먼트를 재정의한다. -->
    <complexType name="eBook_newType">
    	<complexContent>
    		<restriction base="tns:eBookType">
    			<sequence>
    				<element ref="tns:title"></element>
                    <element ref="tns:originalTitle" maxOccurs="1" minOccurs="0">
    				</element>
                    <element ref="tns:author" maxOccurs="unbounded"
    					minOccurs="1">
    				</element>
                    <element ref="tns:translator" maxOccurs="1" minOccurs="0">
    				</element>
                    <element ref="tns:publisher"></element>
    				<element ref="tns:publishDate"></element>
    	      <!-- R11: 개정일이 존재할 수 없도록 maxOccurs와 minOccurs 두 속성을 0으로 지정한다. -->
                    <element ref="tns:revisionDate" maxOccurs="0" minOccurs="0">
    				</element>
                    <element ref="tns:price"></element>
               <!-- R11:신간 전자책은 할인율이 10 이하이므로 maxInclusive 값을 10으로 지정한다. -->
                    <element name="discountRate">
    					<simpleType>
    						<restriction base="tns:discountRateType">
    							<maxInclusive value="10"></maxInclusive>
    						</restriction>
    					</simpleType>
    				</element>
                    <element ref="tns:pages"></element>
                    <element name="category" type="string" maxOccurs="unbounded" minOccurs="1"></element>
    				<element ref="tns:coverImage" maxOccurs="1"
    					minOccurs="0">
    				</element>
    				<element ref="tns:plot" maxOccurs="1"
    					minOccurs="0">
    				</element>
    				<element ref="tns:review" maxOccurs="unbounded"
    					minOccurs="0">
    				</element>
    				<element ref="tns:format"></element>
    				<element ref="tns:size"></element>
    				<element name="period">
    					<simpleType>
    						<restriction base="tns:periodType">
    							<maxInclusive value="14"></maxInclusive>
    						</restriction>
    					</simpleType>
    				</element>
    			</sequence>
    		</restriction>
    	</complexContent>
    </complexType>
    
    <!-- 요구사항 R11에서 ebookNewType을 ebookType 기반으로 재정의하기 위해서는
    ebookType과 ebookType이 기반하고 있는 bookType의 자식 엘리먼트들이 글로벌 엘리먼트여야 한다.
    따라서 요구사항 R2의 제목, 저자, 출판사 등의 도서 정보를 글로벌 엘리먼트로 선언한다.-->
    <element name="title" type="string"></element>
    <element name="author" type="string"></element>
    <element name="publisher" type="string"></element>
    
    <!-- 기타요구사항에 따라 출판일, 개정일을 global element로 정의하고
    anonymous local type으로 정의한다. 이때 bookTypes.xsd에서 정의한 속성 그룹을 사용한다. -->
    <element name="publishDate">
    	<complexType>
    		<attributeGroup ref="tns:dateGroup"></attributeGroup>
    	</complexType>
    </element>
    <element name="price" type="tns:priceType"></element>
    <element name="discountRate" type="tns:discountRateType"></element>
    <element name="pages" type="tns:pagesType"></element>
    <element name="revisionDate">
		<complexType>
			<attributeGroup ref="tns:dateGroup">
			</attributeGroup>
		</complexType>
	</element>
    <element name="coverImage">
    	<complexType>
    		<attribute name="src" type="anyURI"></attribute>
    		<attribute name="type" type="tns:ImageType"></attribute>
    	</complexType>
    </element>
    <element name="plot" type="string"></element>
    <element name="review" type="string"></element>
    <element name="originalTitle" type="string"></element>
    <element name="translator" type="string"></element>
	<element name="format" type="tns:formatType"></element>
	<element name="size">
		<complexType>
			<simpleContent>
				<extension base="tns:sizeType">
					<attribute name="unit" type="tns:unitType"></attribute>
				</extension>
			</simpleContent>
		</complexType>
	</element>
	<element name="period" type="tns:periodType">
    </element>

	<!-- R12: 분야는 이름과 식별자(cid)를 가진다. 이를 속성으로 정의한다.
	또한 세부 분야로 나뉠 수 있기 때문에 category 자신의 자식 엘리먼트로 category를 선언한다. -->
    <complexType name="categoryType">
    	<sequence>
    		<element name="category" type="tns:categoryType" maxOccurs="unbounded" minOccurs="0"></element>
    	</sequence>
    	<attribute name="cid">
    		<simpleType>
    			<restriction base="string">
    				<pattern value="c10[1-9](-[1-9])*"></pattern>
    			</restriction>
    		</simpleType>
    	</attribute>
    	<attribute name="name" type="string"></attribute>
    </complexType>

    <element name="category" type="string">
    </element>
</schema>